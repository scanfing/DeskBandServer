// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ServerInfrastructure.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DeskBandServer.Grpc {

  /// <summary>Holder for reflection information generated from ServerInfrastructure.proto</summary>
  public static partial class ServerInfrastructureReflection {

    #region Descriptor
    /// <summary>File descriptor for ServerInfrastructure.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServerInfrastructureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpTZXJ2ZXJJbmZyYXN0cnVjdHVyZS5wcm90bxITRGVza0JhbmRTZXJ2ZXIu",
            "R3JwYyI5CgtDdXN0b21Db2xvchIJCgFBGAEgASgNEgkKAVIYAiABKA0SCQoB",
            "RxgDIAEoDRIJCgFCGAQgASgNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DeskBandServer.Grpc.CustomColor), global::DeskBandServer.Grpc.CustomColor.Parser, new[]{ "A", "R", "G", "B" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///自定义ARGB颜色结构
  /// </summary>
  public sealed partial class CustomColor : pb::IMessage<CustomColor> {
    private static readonly pb::MessageParser<CustomColor> _parser = new pb::MessageParser<CustomColor>(() => new CustomColor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomColor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DeskBandServer.Grpc.ServerInfrastructureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomColor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomColor(CustomColor other) : this() {
      a_ = other.a_;
      r_ = other.r_;
      g_ = other.g_;
      b_ = other.b_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomColor Clone() {
      return new CustomColor(this);
    }

    /// <summary>Field number for the "A" field.</summary>
    public const int AFieldNumber = 1;
    private uint a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    /// <summary>Field number for the "R" field.</summary>
    public const int RFieldNumber = 2;
    private uint r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "G" field.</summary>
    public const int GFieldNumber = 3;
    private uint g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "B" field.</summary>
    public const int BFieldNumber = 4;
    private uint b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomColor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomColor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (A != other.A) return false;
      if (R != other.R) return false;
      if (G != other.G) return false;
      if (B != other.B) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (A != 0) hash ^= A.GetHashCode();
      if (R != 0) hash ^= R.GetHashCode();
      if (G != 0) hash ^= G.GetHashCode();
      if (B != 0) hash ^= B.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (A != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(A);
      }
      if (R != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(R);
      }
      if (G != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(G);
      }
      if (B != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(B);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (A != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(A);
      }
      if (R != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(R);
      }
      if (G != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(G);
      }
      if (B != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(B);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomColor other) {
      if (other == null) {
        return;
      }
      if (other.A != 0) {
        A = other.A;
      }
      if (other.R != 0) {
        R = other.R;
      }
      if (other.G != 0) {
        G = other.G;
      }
      if (other.B != 0) {
        B = other.B;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            A = input.ReadUInt32();
            break;
          }
          case 16: {
            R = input.ReadUInt32();
            break;
          }
          case 24: {
            G = input.ReadUInt32();
            break;
          }
          case 32: {
            B = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
