// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: DeskBandServerManager.proto
// </auto-generated>
// Original file comments:
// 指定protobuf语法版本
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace DeskBandServer.Grpc {
  /// <summary>
  ///DeskBand服务
  /// </summary>
  public static partial class DeskBandServiceManager
  {
    static readonly string __ServiceName = "DeskBandServer.Grpc.DeskBandServiceManager";

    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.GetStyleRequest> __Marshaller_DeskBandServer_Grpc_GetStyleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.GetStyleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.GetStyleReply> __Marshaller_DeskBandServer_Grpc_GetStyleReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.GetStyleReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.ConfigMsgServerRequest> __Marshaller_DeskBandServer_Grpc_ConfigMsgServerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.ConfigMsgServerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.ConfigMsgServerReply> __Marshaller_DeskBandServer_Grpc_ConfigMsgServerReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.ConfigMsgServerReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.SetStyleRequest> __Marshaller_DeskBandServer_Grpc_SetStyleRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.SetStyleRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.SetStyleReply> __Marshaller_DeskBandServer_Grpc_SetStyleReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.SetStyleReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest> __Marshaller_DeskBandServer_Grpc_StartGrpcMsgServiceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.StartGrpcMsgServiceReply> __Marshaller_DeskBandServer_Grpc_StartGrpcMsgServiceReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.StartGrpcMsgServiceReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest> __Marshaller_DeskBandServer_Grpc_StopGrpcMsgServiceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::DeskBandServer.Grpc.StopGrpcMsgServiceReply> __Marshaller_DeskBandServer_Grpc_StopGrpcMsgServiceReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::DeskBandServer.Grpc.StopGrpcMsgServiceReply.Parser.ParseFrom);

    static readonly grpc::Method<global::DeskBandServer.Grpc.GetStyleRequest, global::DeskBandServer.Grpc.GetStyleReply> __Method_GetStyle = new grpc::Method<global::DeskBandServer.Grpc.GetStyleRequest, global::DeskBandServer.Grpc.GetStyleReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStyle",
        __Marshaller_DeskBandServer_Grpc_GetStyleRequest,
        __Marshaller_DeskBandServer_Grpc_GetStyleReply);

    static readonly grpc::Method<global::DeskBandServer.Grpc.ConfigMsgServerRequest, global::DeskBandServer.Grpc.ConfigMsgServerReply> __Method_ConfigMsgServer = new grpc::Method<global::DeskBandServer.Grpc.ConfigMsgServerRequest, global::DeskBandServer.Grpc.ConfigMsgServerReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ConfigMsgServer",
        __Marshaller_DeskBandServer_Grpc_ConfigMsgServerRequest,
        __Marshaller_DeskBandServer_Grpc_ConfigMsgServerReply);

    static readonly grpc::Method<global::DeskBandServer.Grpc.SetStyleRequest, global::DeskBandServer.Grpc.SetStyleReply> __Method_SetStyle = new grpc::Method<global::DeskBandServer.Grpc.SetStyleRequest, global::DeskBandServer.Grpc.SetStyleReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetStyle",
        __Marshaller_DeskBandServer_Grpc_SetStyleRequest,
        __Marshaller_DeskBandServer_Grpc_SetStyleReply);

    static readonly grpc::Method<global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest, global::DeskBandServer.Grpc.StartGrpcMsgServiceReply> __Method_StartGrpcMsgService = new grpc::Method<global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest, global::DeskBandServer.Grpc.StartGrpcMsgServiceReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartGrpcMsgService",
        __Marshaller_DeskBandServer_Grpc_StartGrpcMsgServiceRequest,
        __Marshaller_DeskBandServer_Grpc_StartGrpcMsgServiceReply);

    static readonly grpc::Method<global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest, global::DeskBandServer.Grpc.StopGrpcMsgServiceReply> __Method_StopGrpcMsgService = new grpc::Method<global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest, global::DeskBandServer.Grpc.StopGrpcMsgServiceReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StopGrpcMsgService",
        __Marshaller_DeskBandServer_Grpc_StopGrpcMsgServiceRequest,
        __Marshaller_DeskBandServer_Grpc_StopGrpcMsgServiceReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::DeskBandServer.Grpc.DeskBandServerManagerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DeskBandServiceManager</summary>
    [grpc::BindServiceMethod(typeof(DeskBandServiceManager), "BindService")]
    public abstract partial class DeskBandServiceManagerBase
    {
      /// <summary>
      ///获取样式配置
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::DeskBandServer.Grpc.GetStyleReply> GetStyle(global::DeskBandServer.Grpc.GetStyleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::DeskBandServer.Grpc.ConfigMsgServerReply> ConfigMsgServer(global::DeskBandServer.Grpc.ConfigMsgServerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///设置样式配置
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::DeskBandServer.Grpc.SetStyleReply> SetStyle(global::DeskBandServer.Grpc.SetStyleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///启动Grpc消息服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::DeskBandServer.Grpc.StartGrpcMsgServiceReply> StartGrpcMsgService(global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///停止Grpc消息服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::DeskBandServer.Grpc.StopGrpcMsgServiceReply> StopGrpcMsgService(global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DeskBandServiceManager</summary>
    public partial class DeskBandServiceManagerClient : grpc::ClientBase<DeskBandServiceManagerClient>
    {
      /// <summary>Creates a new client for DeskBandServiceManager</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DeskBandServiceManagerClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DeskBandServiceManager that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DeskBandServiceManagerClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DeskBandServiceManagerClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DeskBandServiceManagerClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///获取样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.GetStyleReply GetStyle(global::DeskBandServer.Grpc.GetStyleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStyle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.GetStyleReply GetStyle(global::DeskBandServer.Grpc.GetStyleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetStyle, null, options, request);
      }
      /// <summary>
      ///获取样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.GetStyleReply> GetStyleAsync(global::DeskBandServer.Grpc.GetStyleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetStyleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///获取样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.GetStyleReply> GetStyleAsync(global::DeskBandServer.Grpc.GetStyleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetStyle, null, options, request);
      }
      public virtual global::DeskBandServer.Grpc.ConfigMsgServerReply ConfigMsgServer(global::DeskBandServer.Grpc.ConfigMsgServerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigMsgServer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::DeskBandServer.Grpc.ConfigMsgServerReply ConfigMsgServer(global::DeskBandServer.Grpc.ConfigMsgServerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ConfigMsgServer, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.ConfigMsgServerReply> ConfigMsgServerAsync(global::DeskBandServer.Grpc.ConfigMsgServerRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ConfigMsgServerAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.ConfigMsgServerReply> ConfigMsgServerAsync(global::DeskBandServer.Grpc.ConfigMsgServerRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ConfigMsgServer, null, options, request);
      }
      /// <summary>
      ///设置样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.SetStyleReply SetStyle(global::DeskBandServer.Grpc.SetStyleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetStyle(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///设置样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.SetStyleReply SetStyle(global::DeskBandServer.Grpc.SetStyleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetStyle, null, options, request);
      }
      /// <summary>
      ///设置样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.SetStyleReply> SetStyleAsync(global::DeskBandServer.Grpc.SetStyleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetStyleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///设置样式配置
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.SetStyleReply> SetStyleAsync(global::DeskBandServer.Grpc.SetStyleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetStyle, null, options, request);
      }
      /// <summary>
      ///启动Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.StartGrpcMsgServiceReply StartGrpcMsgService(global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartGrpcMsgService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///启动Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.StartGrpcMsgServiceReply StartGrpcMsgService(global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartGrpcMsgService, null, options, request);
      }
      /// <summary>
      ///启动Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.StartGrpcMsgServiceReply> StartGrpcMsgServiceAsync(global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartGrpcMsgServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///启动Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.StartGrpcMsgServiceReply> StartGrpcMsgServiceAsync(global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartGrpcMsgService, null, options, request);
      }
      /// <summary>
      ///停止Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.StopGrpcMsgServiceReply StopGrpcMsgService(global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopGrpcMsgService(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///停止Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::DeskBandServer.Grpc.StopGrpcMsgServiceReply StopGrpcMsgService(global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StopGrpcMsgService, null, options, request);
      }
      /// <summary>
      ///停止Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.StopGrpcMsgServiceReply> StopGrpcMsgServiceAsync(global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopGrpcMsgServiceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///停止Grpc消息服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::DeskBandServer.Grpc.StopGrpcMsgServiceReply> StopGrpcMsgServiceAsync(global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StopGrpcMsgService, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DeskBandServiceManagerClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DeskBandServiceManagerClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DeskBandServiceManagerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetStyle, serviceImpl.GetStyle)
          .AddMethod(__Method_ConfigMsgServer, serviceImpl.ConfigMsgServer)
          .AddMethod(__Method_SetStyle, serviceImpl.SetStyle)
          .AddMethod(__Method_StartGrpcMsgService, serviceImpl.StartGrpcMsgService)
          .AddMethod(__Method_StopGrpcMsgService, serviceImpl.StopGrpcMsgService).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DeskBandServiceManagerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetStyle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeskBandServer.Grpc.GetStyleRequest, global::DeskBandServer.Grpc.GetStyleReply>(serviceImpl.GetStyle));
      serviceBinder.AddMethod(__Method_ConfigMsgServer, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeskBandServer.Grpc.ConfigMsgServerRequest, global::DeskBandServer.Grpc.ConfigMsgServerReply>(serviceImpl.ConfigMsgServer));
      serviceBinder.AddMethod(__Method_SetStyle, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeskBandServer.Grpc.SetStyleRequest, global::DeskBandServer.Grpc.SetStyleReply>(serviceImpl.SetStyle));
      serviceBinder.AddMethod(__Method_StartGrpcMsgService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeskBandServer.Grpc.StartGrpcMsgServiceRequest, global::DeskBandServer.Grpc.StartGrpcMsgServiceReply>(serviceImpl.StartGrpcMsgService));
      serviceBinder.AddMethod(__Method_StopGrpcMsgService, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::DeskBandServer.Grpc.StopGrpcMsgServiceRequest, global::DeskBandServer.Grpc.StopGrpcMsgServiceReply>(serviceImpl.StopGrpcMsgService));
    }

  }
}
#endregion
